<html>

<head>

<meta name="Keywords" content="">
<meta name="Description" content=".">

<link rel="stylesheet" type="text/css" href="../Lessons.css">

<title>Java Tutorial - Lesson 23: File Processing</title>
</head>

<body>

<div align="center">

<table border="0" width="900" cellspacing="1" cellpadding="0">
  <tr>
    <td width="738" align="center">
    

    </td>
  </tr>
</table>
</div>

&nbsp;
<div align="center">
  <table border="0" width="900">
    <tr>
      <td width="680" valign="top" rowspan="2">

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="10%" valign="middle" align="center"><a href="index.htm"><img border="0" src="../lessonno/L23.gif" alt="Home" width="60" height="63"></a></td>
    <td width="90%">
      <p class="maintitle">File Processing</p></td>
  </tr>
  <tr>
    <td width="100%" colspan="2" height="2" bgcolor="#CC3300"></td>
  </tr>
</table>

<Span name=KonaBody>

&nbsp;

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">
      <p class="paratitle">Files</td>
  </tr>
  <tr>
    <td width="100%" height="1" bgcolor="#FF0000"></td>
  </tr>
</table>

&nbsp;

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">
      <p class="subtitle">Introduction</td>
  </tr>
  <tr>
    <td width="100%" height="1" bgcolor="#0000FF"></td>
  </tr>
</table>

<table border="0" width="100%">
  <tr>
    <td valign="top">
          
<script type="text/javascript"><!--
google_ad_client = "pub-3968514660870014";
google_ad_width = 160;
google_ad_height = 90;
google_ad_format = "160x90_0ads_al";
google_ad_type = "text_image";
google_ad_channel ="";
google_color_border = "800000";
google_color_bg = "FFFFFF";
google_color_link = "0000FF";
google_color_url = "0000ff";
google_color_text = "000000";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>

    </td>
    <td>
<p class="parajust">File processing is performed in Java using various classes.
The primary class used to handle files is called File. The File class is part of
the <b>java.io</b> package. To use it, you can start by importing it in your
file. Here is an example:</p>
    </td>
  </tr>
</table>

</Span>

        <pre><font color="#FF0000">import java.io.File;</font>

public class Exercise {
    public static void main(String[] args)  throws Exception {
	
    }
}</pre>
<p class="parajust">The <b>File</b> class is based on (implements) the <b>FileOutputStream</b>
class. The <b>FileOutputStream</b> class is based on the <b>OutputStream</b>
class. That is how it gets most of its functionality.<p class="parajust">To use
a file, declare a <b>File</b> variable using one of its constructors. One of the
constructors takes one argument as a string, the name of the file or its
complete path. Of course, if the file has an extension, you must include it.
Here is an example:<pre>import java.io.File;

public class Exercise {
    public static void main(String[] args)  throws Exception {
	<font color="#FF0000">File fleExample = new File(&quot;Example.xpl&quot;);</font>
    }
}</pre>
<p class="parajust">The only real thing the <b>File</b> class does is to
indicate that you are planning to use a file. It does not indicate what you will
do with the file. You must specify whether you will create a new file or open an
existing one.

<Span name=KonaBody>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">
      <p class="exotitle"><img border="0" src="../images/practical1.gif" alt="Practical Learning" width="19" height="18">Practical
      Learning: Introducing File Processing</td>
  </tr>
  <tr>
    <td width="100%" bgcolor="#CC3300" height="1"></td>
  </tr>
</table>
      <ol>
  <li>Start NetBeans
  </li>
  <li>To create a Java Application, on the main menu, click File -&gt; New
    Project...
  </li>
  <li>Select Java Application and click Next
  </li>
  <li>Set the Name to <b>StudentUniversity1</b>
  </li>
        <li>Set the Main Class name to <b>Central</b></li>
        <li>Click Finish</li>
        <li>In the Projects window, right-click StudentUniversity1 -&gt; New
          -&gt; Java Package...</li>
        <li>Set the name to <b>Students</b></li>
        <li>Click Finish</li>
        <li>To create a new class, in the Projects window, under
          StudentUniversity1, right-click Students<b> </b>-&gt; New -&gt; Java Class...</li>
        <li>Set the Name to <b>Student</b></li>
        <li>Click Finish</li>
        <li>Change the file as follows:<br>
          &nbsp;
          <table border="0" width="560">
            <tr>
              <td width="100%">
                <pre>package Students;

public class Student {
    public int StudentIdentificationNumber;
    public String FirstName;
    public String LastName;
    public int CreditsSoFar;
    public double GPA;
}</pre>
              </td>
            </tr>
          </table>
  </li>
      </ol>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">
      <p class="subtitle">Creating a File</td>
  </tr>
  <tr>
    <td width="100%" height="1" bgcolor="#0000FF"></td>
  </tr>
</table>

</Span>

<p class="parajust">If you want to create a new file, you must use a class that
is equipped to write values to a file. To do this, you can use the <b>PrintWriter</b>
class. The <b>PrintWriter</b> class is defined in the <b>java.io</b> package.
Therefore, if you want to use it, you can import it in your document. This would
be done as follows:<pre><font color="#FF0000">import java.io.PrintWriter;</font>

public class Exercise {
    public static void main(String[] args)  throws Exception {

    }
}</pre>
<p class="parajust">The <b>PrintWriter</b> class is based on (implements) the <b>Writer</b>
class. The class is equipped with the necessary means of writing values to a
file.<p class="parajust">Before using the class, declare a variable for it. This
class is equipped with many constructors. One of the constructors takes as
argument an <b>OutputStream</b> object. We saw that the File class is based on <b>OutputStream</b>.
This means that you can pass a File object to a <b>PrintWriter</b> constructor.
This would be done as follows:<pre>import java.io.File;
import java.io.PrintWriter;

public class Exercise {
    public static void main(String[] args)  throws Exception {
	// Indicate that you are planning to use a file
	File fleExample = new File(&quot;Example.xpl&quot;);
        // Create that file and prepare to write some values to it
        <font color="#FF0000">PrintWriter pwInput = new PrintWriter(fleExample);</font>
    }
}</pre>

<Span name=KonaBody>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">
      <p class="subtitle">Writing to a File</td>
  </tr>
  <tr>
    <td width="100%" height="1" bgcolor="#0000FF"></td>
  </tr>
</table>

</Span>

<p class="parajust">After creating a <b>PrintWriter</b> object, you can write
values to the file. To support this, the <b>PrintWriter</b> class is equipped
with the <b> print()</b> and <b>println()</b> methods that is overloaded with various versions for each type
of values (<b>boolean</b>, <b>char</b>, <b>char[]</b>, <b>int</b>, <b>float</b>,
<b>double</b>, <b>String</b>, or <b>Object</b>). Therefore, to write a value to
a file, call the appropriate version of the <b>PrintWriter.print()</b> method
and pass the desired value. Here are examples:<pre>import java.io.File;
import java.io.PrintWriter;

public class Exercise {
    public static void main(String[] args)  throws Exception {
	// Indicate that you are planning to use a file
	File fleExample = new File(&quot;Example.xpl&quot;);
        // Create that file and prepare to write some values to it
        PrintWriter pwInput = new PrintWriter(fleExample);

	// Write a string to the file
	<font color="#FF0000">pwInput.println(&quot;Francine&quot;);</font>
	// Write a string to the file
     	<font color="#FF0000">pwInput.println(&quot;Mukoko&quot;);</font>
	// Write a double-precision number to the file
	<font color="#FF0000">pwInput.println(22.85);</font>
	// Write a Boolean value to the file
	<font color="#FF0000">pwInput.print(true);</font>
    }
}</pre>
<p class="parajust">After using a <b>PrintWriter</b> object, you should free the
resources it was using. To assist you with this, the PrintWriter class is
equipped with the Close() method. Here is an example of calling:</p>
<pre>import java.io.File;
import java.io.PrintWriter;

public class Exercise {
    public static void main(String[] args)  throws Exception {
	// Indicate that you are planning to use a file
	File fleExample = new File(&quot;Example.xpl&quot;);
        // Create that file and prepare to write some values to it
        PrintWriter pwInput = new PrintWriter(fleExample);

	// Write a string to the file
	pwInput.println(&quot;Francine&quot;);
	// Write a string to the file
     	pwInput.println(&quot;Mukoko&quot;);
	// Write a double-precision number to the file
	pwInput.println(22.85);
	// Write a Boolean value to the file
	pwInput.print(true);
	
        // After using the PrintWriter object, de-allocated its memory
        <font color="#FF0000">pwInput.close();</font>
        // For convenience, let the user know that the file has been created
        System.out.println(&quot;The file has been created.&quot;);   
    }
}</pre>

<Span name=KonaBody>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">
      <p class="exotitle"><img border="0" src="../images/practical1.gif" alt="Practical Learning" width="19" height="18">Practical
      Learning: Creating a File</td>
  </tr>
  <tr>
    <td width="100%" bgcolor="#CC3300" height="1"></td>
  </tr>
</table>
      <ol>
  <li>Click the Central.java tab
  </li>
        <li>Change the file as follows:<br>
          &nbsp;
          <table border="0" width="560">
            <tr>
              <td width="100%">
                <pre>package studentuniversity1;
<font color="#FF0000">import java.io.*;
import Students.Student;
import java.util.Scanner;</font>

public class Central {
    <font color="#FF0000">public static Student register() {
        Student kid = new Student();
        Scanner scnr = new Scanner(System.in);
        
        System.out.println(&quot;Enter information about the student&quot;);
        System.out.print(&quot;Student ID: &quot;);
        kid.StudentIdentificationNumber = scnr.nextInt();
        System.out.print(&quot;First Name: &quot;);
        kid.FirstName = scnr.next();
        System.out.print(&quot;Last Name: &quot;);
        kid.LastName = scnr.next();
        System.out.print(&quot;Number of credits so far: &quot;);
        kid.CreditsSoFar = scnr.nextInt();
        System.out.print(&quot;Grade point average: &quot;);
        kid.GPA = scnr.nextDouble();
        
        return kid;
    }

    public static void save(Student pupil) throws Exception {
        String strFilename = &quot;&quot;;
        Scanner scnr = new Scanner(System.in);
        
        System.out.print(&quot;Enter the file name: &quot;);
        strFilename = scnr.next();</font>
        
        // Make sure the user entered a valid file name
        <font color="#FF0000">if( !strFilename.equals(&quot;&quot;)) {</font>
            // Indicate that you are planning to use a file
            <font color="#FF0000">File fleExample = new File(strFilename);</font>
            // Create that file and prepare to write some values to it
            <font color="#FF0000">PrintWriter wrtStudent = new PrintWriter(fleExample);

            wrtStudent.println(pupil.StudentIdentificationNumber);
            wrtStudent.println(pupil.FirstName);
            wrtStudent.println(pupil.LastName);
            wrtStudent.println(pupil.CreditsSoFar);
            wrtStudent.println(pupil.GPA);</font>
            
            // After using the PrintWriter object, de-allocated its memory
            <font color="#FF0000">wrtStudent.close();</font>
            // For convenience, let the user know that the file has been created
            <font color="#FF0000">System.out.println(&quot;The file has been created.&quot;);
        }
    }
    
    public static void show(Student std) throws Exception {
        System.out.println(&quot;Student Record&quot;);
        System.out.println(&quot;Student ID: &quot; + std.StudentIdentificationNumber);
        System.out.println(&quot;First Name: &quot; + std.FirstName);
        System.out.println(&quot;Last Name: &quot; + std.LastName);
        System.out.println(&quot;Number of credits so far: &quot; + std.CreditsSoFar);
        System.out.println(&quot;Grade point average: &quot; + std.GPA);
    }</font>
    
    public static void main(String[] args) throws Exception {
        <font color="#FF0000">String answer = &quot;n&quot;;
        Student std = register();
        Scanner scnr = new Scanner(System.in);
        
        System.out.print(&quot;Do you want to save this information (y/n)? &quot;);
        answer = scnr.next();
        
        if( (answer.equals(&quot;y&quot;)) || (answer.equals(&quot;Y&quot;)) ) {
	    show(std);
            save(std);
        }</font>
    }

}</pre>
              </td>
            </tr>
          </table>
  </li>
  <li>Press F6 to execute the application</li>
  <li>Enter the following information:

<Span name=KonaBody>

<br>
&nbsp;
<table border="0" width="215">
  <tr>
    <td width="105">Student ID:</td>
    <td width="96">927426</td>
  </tr>
  <tr>
    <td width="105">First Name:</td>
    <td width="96">Christopher</td>
  </tr>
  <tr>
    <td width="105">Last Name</td>
    <td width="96">Lame</td>
  </tr>
  <tr>
    <td width="105">Credits so far:</td>
    <td width="96">38</td>
  </tr>
  <tr>
    <td width="105">GPA</td>
    <td width="96">2.26</td>
  </tr>
</table>
    </span></li>
  <li>When asked whether you want to save, click Yes</li>
  <li>Type <b>Student1.txt</b>

<Span name=KonaBody>

 as the file name </span>and press Enter</li>

<Span name=KonaBody>

  <li>Execute the application again</li>
  <li>Enter the following information:<br>
    &nbsp;
    <table border="0" width="215">
      <tr>
        <td width="105">Student ID:</td>
        <td width="96">286350</td>
      </tr>
      <tr>
        <td width="105">First Name:</td>
        <td width="96">June</td>
      </tr>
      <tr>
        <td width="105">Last Name</td>
        <td width="96">Glasnow</td>
      </tr>
      <tr>
        <td width="105">Credits so far:</td>
        <td width="96">69</td>
      </tr>
      <tr>
        <td width="105">GPA</td>
        <td width="96">3.15</td>
      </tr>
    </table>
</li>
<li>When asked whether you want to save, click Yes</li>
<li>Type <b>Student2.txt</b> as the file name and press Enter</li>
  </span>
      </ol>

</span>

      </td>
      <td>
   
<table border="0" width="100%">
  <tr>
    <td width="100%">

<script type="text/javascript"><!--
google_ad_client = "pub-3968514660870014";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "text_image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>

    </td>
  </tr>
</table>

&nbsp;
        <table border="0" width="100%">
          <tr>
            <td width="100%">

<script type="text/javascript"><!--
google_ad_client = "pub-3968514660870014";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel ="";
google_color_border = "FFFFFF";
google_color_link = "0000FF";
google_color_bg = "FFFFFF";
google_color_text = "000000";
google_color_url = "008000";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>

            </td>
          </tr>
        </table>
      </td>
    </tr>
    <tr>
      <td>
   
&nbsp;
        <table border="0" width="100%">
          <tr>
            <td width="100%"></td>
          </tr>
        </table>
&nbsp;
      </td>
    </tr>
  </table></div>

&nbsp;

<div align="center">
<table border="0" width="900">
  <tr>
    <td width="680" rowspan="2">

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">
      <p class="subtitle">Opening a File</td>
  </tr>
  <tr>
    <td width="100%" height="1" bgcolor="#0000FF"></td>
  </tr>
</table>

<p class="parajust">Besides creating a file, the second most common operation
performed on a file consists of opening one. You can open a file using the File
class. As done previously, first declare a File variable and pass the name of
the file to its constructor. Here is an example:<pre>import java.io.File;

public class Exercise {
    public static void main(String[] args)  throws Exception {
	// Incidate that you are planning to opena file
	<font color="#FF0000">File fleExample = new File(&quot;Example.xpl&quot;);</font>
    }
}</pre>

<Span name=KonaBody>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">
      <p class="subtitle">Reading From a File</td>
  </tr>
  <tr>
    <td width="100%" height="1" bgcolor="#0000FF"></td>
  </tr>
</table>

</Span>

<p class="parajust">To support the ability to read a value from a file, you can
use the <b>Scanner</b> class. To support this operation, the <b>Scanner</b>
class is equipped with a constructor that takes a <b>File</b> object as
argument. Therefore, you can pass it a <b>File</b> variable you will have
previously declared. Here is an example of declaring and initializing a variable
for it:</p>
<pre>import java.io.File;
import java.util.Scanner;

public class Exercise {
    public static void main(String[] args)  throws Exception {
	// Indicate that you are planning to opena file
	File fleExample = new File(&quot;Example.xpl&quot;);
        // Prepare a Scanner that will &quot;scan&quot; the document
        <font color="#FF0000">Scanner opnScanner = new Scanner(fleExample);</font>
    }
}</pre>
<p class="parajust">The values of a file are stored in or more lines. To
continuously read the lines from the file, one at a time, you can use a <b>while</b>
loop. In the <b>while</b> loop, continuously use the <b>Scanner</b> object that
can read a line of value(s). In the while statement, to check whether the
Scanner object has not gotten to the last line, you can check the status of its
hasNext() method. As long as this method returns true, the Scanner reader has
not gotten to the end of the file. Once the Scanner object has arrived to the
end, this method would return false. Here is an example of implementing this
scenario:</p>
<pre>import java.io.File;
import java.util.Scanner;

public class Exercise {
    public static void main(String[] args)  throws Exception {
	// Indicate that you are planning to opena file
	File fleExample = new File(&quot;Example.xpl&quot;);
        // Prepare a Scanner that will &quot;scan&quot; the document
        Scanner opnScanner = new Scanner(fleExample);

	// Read each line in the file
        <font color="#FF0000">while(opnScanner.hasNext()) {</font>
            // Read each line and display its value
	    <font color="#FF0000">System.out.println(&quot;First Name:    &quot; + opnScanner.nextLine());
	    System.out.println(&quot;Last Name:     &quot; + opnScanner.nextLine());
	    System.out.println(&quot;Hourly Salary: &quot; + opnScanner.nextLine());
	    System.out.println(&quot;Is Full Time?: &quot; + opnScanner.nextLine());
	}</font>
    }
}</pre>
<p class="parajust">After using the <b>Scanner</b> object, to free the resources
it was using, call its close() method. Here is an example:</p>
<pre>import java.io.File;
import java.util.Scanner;

public class Exercise {
    public static void main(String[] args)  throws Exception {
	// Indicate that you are planning to opena file
	File fleExample = new File(&quot;Example.xpl&quot;);
        // Prepare a Scanner that will &quot;scan&quot; the document
        Scanner opnScanner = new Scanner(fleExample);

	// Read each line in the file
        while( opnScanner.hasNext() ) {
            // Read each line and display its value
	    System.out.println(&quot;First Name:    &quot; + opnScanner.nextLine());
	    System.out.println(&quot;Last Name:     &quot; + opnScanner.nextLine());
	    System.out.println(&quot;Hourly Salary: &quot; + opnScanner.nextLine());
	    System.out.println(&quot;Is Full Time?: &quot; + opnScanner.nextLine());
	}
            
    	// De-allocate the memory that was used by the scanner
        <font color="#FF0000">opnScanner.close();</font>
    }
}</pre>

<Span name=KonaBody>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">
      <p class="exotitle"><img border="0" src="../images/practical1.gif" alt="Practical Learning" width="19" height="18">Practical
      Learning: Opening a File</td>
  </tr>
  <tr>
    <td width="100%" bgcolor="#CC3300" height="1"></td>
  </tr>
</table>
      <ol>
  <li>Change the

<Span name=KonaBody>

 Central.java</Span> file as follows:<br>
          &nbsp;
          <table border="0" width="560">
            <tr>
              <td width="100%">
                <pre>package studentuniversity1;
import java.io.*;
import Students.Student;
import java.util.Scanner;

public class Main {
    public static Student register() {
        Student kid = new Student();
        Scanner scnr = new Scanner(System.in);
        
        System.out.println(&quot;Enter information about the student&quot;);
        System.out.print(&quot;Student ID: &quot;);
        kid.StudentIdentificationNumber = scnr.nextInt();
        System.out.print(&quot;First Name: &quot;);
        kid.FirstName = scnr.next();
        System.out.print(&quot;Last Name: &quot;);
        kid.LastName = scnr.next();
        System.out.print(&quot;Number of credits so far: &quot;);
        kid.CreditsSoFar = scnr.nextInt();
        System.out.print(&quot;Grade point average: &quot;);
        kid.GPA = scnr.nextDouble();
        
        return kid;
    }

    public static void save(Student pupil) throws Exception {
        String strFilename = &quot;&quot;;
        Scanner scnr = new Scanner(System.in);
        
        System.out.print(&quot;Enter the file name: &quot;);
        strFilename = scnr.next();
        
        // Make sure the user entered a valid file name
        if( !strFilename.equals(&quot;&quot;)) {
            // Incidate that you are planning to use a file
            File fleStudent = new File(strFilename);
            // Create that file and prepare to write some values to it
            PrintWriter wrtStudent = new PrintWriter(fleStudent);

            wrtStudent.println(pupil.StudentIdentificationNumber);
            wrtStudent.println(pupil.FirstName);
            wrtStudent.println(pupil.LastName);
            wrtStudent.println(pupil.CreditsSoFar);
            wrtStudent.println(pupil.GPA);
            
            // After using the PrintWriter object, de-allocated its memory
            wrtStudent.close();
            // For convenience, let the user know that the file has been created
            System.out.println(&quot;The file has been created.&quot;);
        }
    }
    
    <font color="#FF0000">public static Student open()  throws Exception {
        String strFilename = &quot;&quot;;
        String strStudentIdentificationNumber;
        String strCreditsSoFar;
        String strGPA;
        
        Student majoring = new Student();
        Scanner scnr = new Scanner(System.in);
        
        System.out.print(&quot;Enter the file name: &quot;);
        strFilename = scnr.next();
        
        if( !strFilename.equals(&quot;&quot;) ) {</font>
            // Indicate that you are planning to opena file
            <font color="#FF0000">File fleStudent = new File(strFilename);</font>
            // Prepare a Scanner that will &quot;scan&quot; the document
            <font color="#FF0000">Scanner opnStudentInfo = new Scanner(fleStudent);</font>

            // Read each line in the file
            <font color="#FF0000">while( opnStudentInfo.hasNext() ) {</font>
                // Read each line and display its value
                <font color="#FF0000">strStudentIdentificationNumber = opnStudentInfo.nextLine();
                majoring.StudentIdentificationNumber =
                        Integer.parseInt(strStudentIdentificationNumber);
                majoring.FirstName = opnStudentInfo.nextLine();
                majoring.LastName = opnStudentInfo.nextLine();
                strCreditsSoFar = opnStudentInfo.nextLine();
                majoring.CreditsSoFar = Integer.parseInt(strCreditsSoFar);
                strGPA = opnStudentInfo.nextLine();
                majoring.GPA = Double.parseDouble(strGPA);
            }</font>
            
            // De-allocate the memory that was used by the scanner
            <font color="#FF0000">opnStudentInfo.close();
        }
        
        return majoring;
    }</font>
    
    public static void show(Student std) throws Exception {
        System.out.println(&quot;Student Record&quot;);
        System.out.println(&quot;Student ID: &quot; + std.StudentIdentificationNumber);
        System.out.println(&quot;First Name: &quot; + std.FirstName);
        System.out.println(&quot;Last Name: &quot; + std.LastName);
        System.out.println(&quot;Number of credits so far: &quot; + std.CreditsSoFar);
        System.out.println(&quot;Grade point average: &quot; + std.GPA);
    }
    
    public static void main(String[] args) throws Exception {
        <font color="#FF0000">String mainAnswer = &quot;Q&quot;, answer = &quot;N&quot;;
        Scanner scnr = new Scanner(System.in);
        
        System.out.println(&quot;State University&quot;);
        System.out.println(&quot;What do you want to do?&quot;);
        System.out.println(&quot;R - Register a student&quot;);
        System.out.println(&quot;V - View a student information&quot;);
        System.out.println(&quot;Q - Exit or Quit&quot;);
        System.out.print(&quot;Your Answer? &quot;);
        mainAnswer = scnr.next();
        
        if( (mainAnswer.equals(&quot;r&quot;)) || (mainAnswer.equals(&quot;R&quot;)) ) {
            Student std = register();
            
            System.out.print(&quot;Do you want to save this information (y/n)? &quot;);
            answer = scnr.next();
            if( (answer.equals(&quot;y&quot;)) || (answer.equals(&quot;Y&quot;)) ) {
                show(std);
                save(std);
            }
        }
        else if( (mainAnswer.equals(&quot;v&quot;)) || (mainAnswer.equals(&quot;V&quot;)) ) {
            Student std = open();
            show(std);
        }
        else
            System.out.println(&quot;Good Bye!!!&quot;);</font>
    }
}</pre>
              </td>
            </tr>
          </table>
  </li>
  <li>Execute the application</li>
  <li>On the menu, indicate that you want to view a student record</li>
  <li>Enter one of the student file names and press Enter</li>
      </ol>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">
      <p class="paratitle">File Management</td>
  </tr>
  <tr>
    <td width="100%" height="1" bgcolor="#FF0000"></td>
  </tr>
</table>

&nbsp;

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">
      <p class="subtitle">Checking the Existence of a File</td>
  </tr>
  <tr>
    <td width="100%" height="1" bgcolor="#0000FF"></td>
  </tr>
</table>

</Span>

<p class="parajust">Besides writing to a file or reading from it, there are many
other actions you may to perform on a file.</p>
<p class="parajust">If you try opening a file that does not exist, you would
receive an error:</p>
<pre>Exception in thread &quot;main&quot; java.io.FileNotFoundException: Example1.xpl (The system 
cannot find the file specified)
        at java.io.FileInputStream.open(Native Method)
        at java.io.FileInputStream.&lt;init&gt;(Unknown Source)
        at java.util.Scanner.&lt;init&gt;(Unknown Source)
        at Exercise.main(Exercise.java:9)</pre>
<p class="parajust">Therefore, before opening a file, you may want to check
first whether it exists. To assist you with this, the File class is equipped
with the <b>exists()</b> method. Here is an example of calling it:</p>
<pre>import java.io.File;
import java.util.Scanner;

public class Exercise {
    public static void main(String[] args)  throws Exception {
	// Indicate that you are planning to opena file
	File fleExample = new File(&quot;Example1.xpl&quot;);
        
        // Find out if the file exists already
        <font color="#FF0000">if( fleExample.exists() ) {</font>
	    // Prepare a Scanner that will &quot;scan&quot; the document
            Scanner opnScanner = new Scanner(fleExample);
	    // Read each line in the file
            while( opnScanner.hasNext() ) {
		// Read each line and display its value
	    	System.out.println(&quot;First Name:    &quot; + opnScanner.nextLine());
	    	System.out.println(&quot;Last Name:     &quot; + opnScanner.nextLine());
	    	System.out.println(&quot;Hourly Salary: &quot; + opnScanner.nextLine());
	    	System.out.println(&quot;Is Full Time?: &quot; + opnScanner.nextLine());
	    }
	
	    // De-allocate the memory that was used by the scanner
            opnScanner.close();   
	<font color="#FF0000">}
        else</font> // if( !fleExample.exists() )
            <font color="#FF0000">System.out.println(&quot;No file exists with that name&quot;);</font>
             
    }
}</pre>

<Span name=KonaBody>

<table border="0" width="100%" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%">
      <p class="subtitle">Deleting a File</td>
  </tr>
  <tr>
    <td width="100%" height="1" bgcolor="#0000FF"></td>
  </tr>
</table>

</Span>

<p class="parajust">To delete a file, you can call the <b>delete()</b> method of
the <b>File</b> class.</p>
      <p>&nbsp;</td>
    <td valign="top">
      <table border="0" width="100%">
        <tr>
          <td width="100%">          </td>
        </tr>
      </table>&nbsp;
        
        <table border="0" width="100%" cellspacing="1" cellpadding="0">
          <tr>
            <td width="100%"></td>
          </tr>
          <tr>
            <td width="100%"></td>
          </tr>
        </table>
    </td>
  </tr>
  <tr>
    <td>
      <table border="0" width="100%">
        <tr>
          <td width="100%" align="center">          </td>
        </tr>
      </table>
    </td>
  </tr>
</table></div>

&nbsp;

&nbsp;

<div align="center">
<table border="0" width="900">
  <tr>
    <td width="100%" align="center">
    
<script type="text/javascript"><!--
google_ad_client = "pub-3968514660870014";
google_ad_width = 728;
google_ad_height = 90;
google_ad_format = "728x90_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>

    </td>
  </tr>
</table>
</div>
<div align="center">

<table border="0" width="900">
  <tr>
    <td colspan="3">
      <hr color="#FF0000">
    </td>
  </tr>
  <tr>
    <td style="text-align: center"><a href="Lesson22.htm">Previous</a></td>
    <td style="text-align: center"><a href="index.htm">Copyright &copy; 2009-2012, FunctionX, Inc.</a></td>
    <td style="text-align: center"><a href="index.htm">Home</a></td>
  </tr>
  <tr>
    <td colspan="3">
      <hr color="#FF0000">
    </td>
  </tr>
</table>
</div>

<!-- DynamiContext AdLinks  -->
<SCRIPT LANGUAGE="JavaScript">
var dc_UnitID = 14;
var dc_PublisherID = 2409;
var dc_AdLinkColor = 'blue';
var  dc_adprod='ADL';
</SCRIPT>
<SCRIPT LANGUAGE="JavaScript" SRC="http://kona.kontera.com/javascript/lib/KonaLibInline.js"></SCRIPT>
<!-- DynamiContext AdLinks  -->

</body>

</html>
